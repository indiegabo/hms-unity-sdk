name: Create Version Tag

on:
  push:
    branches:
      - main

jobs:
  tag_release:
    name: Create Tag Based on Package.json
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permission required to create tags and pushes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Use the latest version of checkout
        with:
          fetch-depth: 0
          # Add this line to make subsequent Git operations use your PAT
          token: ${{ secrets.HMS_PAT }} # Assuming HMS_PAT is your PAT secret

      - name: Install Node.js to Read Package.json
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Or the version of Node.js your project uses

      - name: Read Version from Package.json
        id: get_version # Adds an ID to access the output of this step
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Version read from package.json: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT # Saves the version for use in other steps

      - name: Create Tag and Push
        if: success() && steps.get_version.outputs.version != '' # Ensures it only runs if the version is read
        run: |
          TAG_NAME="v${{ steps.get_version.outputs.version }}"
          echo "Trying to create tag: $TAG_NAME"

          # Configures Git with the name and email of the GitHub Actions bot
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Tries to create the tag locally
          git tag "$TAG_NAME"

          # Tries to push the tag to the remote repository.
          # The '--tags' ensures that all local tags are pushed.
          git push origin "$TAG_NAME" || { echo "Tag $TAG_NAME already exists or there was another error."; exit 0; }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Default token with write permissions

